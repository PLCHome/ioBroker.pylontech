{
  "version": 3,
  "sources": ["../src/test.ts"],
  "sourcesContent": ["//import * as serialport from \"serialport\"\nimport { Value } from \"./pylontech/Value\";\nimport WorkerAbstract from \"./pylontech/WorkerAbstract\";\n//import WorkerNet from \"./pylontech/WorkerNet\";\nimport WorkerSerial from \"./pylontech/WorkerSerial\";\n//import { IValue } from './pylontech/IValue';\nimport fs from \"fs/promises\";\n\nconst worker: WorkerAbstract = new WorkerSerial(\"com7\", 115200);\n\nfs.writeFile(\"./elements\", \"\", { flag: \"w+\" });\n\nworker.getData().then((allData: any) => {\n    console.log(JSON.stringify(allData, null, \" \"));\n    function walk(path: string, val: any): void {\n        if (val instanceof Value) {\n            fs.writeFile(\"./elements\", path + \"\\t\" + val.value + \"\\n\", { flag: \"a+\" });\n            console.log(path + \"\\t\" + val.value);\n        } else {\n            Object.keys(val).forEach((key) => {\n                walk(`${path}.${key}`, val[key]);\n            });\n        }\n    }\n    walk(\"pylontech.0\", allData);\n});\n\nfunction to(time: number): Promise<void> {\n    return new Promise<void>((resolve) => {\n        setTimeout(resolve, time * 1000);\n    });\n}\n\nto(30).then((): Promise<boolean> => {\n    return worker.close();\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AACA,mBAAsB;AAGtB,0BAAyB;AAEzB,sBAAe;AAEf,MAAM,SAAyB,IAAI,oBAAAA,QAAa,QAAQ,MAAM;AAE9D,gBAAAC,QAAG,UAAU,cAAc,IAAI,EAAE,MAAM,KAAK,CAAC;AAE7C,OAAO,QAAQ,EAAE,KAAK,CAAC,YAAiB;AACpC,UAAQ,IAAI,KAAK,UAAU,SAAS,MAAM,GAAG,CAAC;AAC9C,WAAS,KAAK,MAAc,KAAgB;AACxC,QAAI,eAAe,oBAAO;AACtB,sBAAAA,QAAG,UAAU,cAAc,OAAO,MAAO,IAAI,QAAQ,MAAM,EAAE,MAAM,KAAK,CAAC;AACzE,cAAQ,IAAI,OAAO,MAAO,IAAI,KAAK;AAAA,IACvC,OAAO;AACH,aAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,QAAQ;AAC9B,aAAK,GAAG,QAAQ,OAAO,IAAI,IAAI;AAAA,MACnC,CAAC;AAAA,IACL;AAAA,EACJ;AACA,OAAK,eAAe,OAAO;AAC/B,CAAC;AAED,SAAS,GAAG,MAA6B;AACrC,SAAO,IAAI,QAAc,CAAC,YAAY;AAClC,eAAW,SAAS,OAAO,GAAI;AAAA,EACnC,CAAC;AACL;AAEA,GAAG,EAAE,EAAE,KAAK,MAAwB;AAChC,SAAO,OAAO,MAAM;AACxB,CAAC;",
  "names": ["WorkerSerial", "fs"]
}
