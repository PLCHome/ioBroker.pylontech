{
  "version": 3,
  "sources": ["../../src/pylontech/WorkerNet.ts"],
  "sourcesContent": ["import Debug from \"debug\";\nimport * as net from \"net\";\nimport WorkerAbstract from \"./WorkerAbstract\";\n\nconst debugApi = Debug(\"pylontech:api\");\n\nexport = class WorkerNet extends WorkerAbstract {\n    protected _socket: net.Socket = new net.Socket();\n\n    constructor(host: string, port: number, baudRate: number, debugData?: (data: Buffer) => void) {\n        debugApi(\"MyWorkerNet.constructor\", \"host:\", host, \"port:\", port);\n        super();\n        if (debugData) this._socket.on(\"data\", debugData);\n        this._socket.pipe(this._consolenReader);\n        this._socket.connect(port, host, this._connected.bind(this));\n    }\n\n    protected _will(): void {\n        const data = Buffer.from(\"FFFB2C\", \"hex\");\n        this._sendDataB(data);\n    }\n\n    protected _setBaudRate(baudRate: number): void {\n        this._will();\n        const data = Buffer.from(\"fffa2c0100000000fff0\", \"hex\");\n        data.writeUInt32BE(baudRate, 4);\n        this._sendDataB(data);\n    }\n\n    protected _setDatasize(datasize: number): void {\n        this._will();\n        const data = Buffer.from(\"fffa2c0200fff0\", \"hex\");\n        data.writeUInt8(datasize, 4);\n        this._sendDataB(data);\n    }\n\n    protected _setParity(parity: number): void {\n        this._will();\n        const data = Buffer.from(\"fffa2c0300fff0\", \"hex\");\n        data.writeUInt8(parity, 4);\n        this._sendDataB(data);\n    }\n\n    protected _setStopsize(stopsize: number): void {\n        this._will();\n        const data = Buffer.from(\"fffa2c0400fff0\", \"hex\");\n        data.writeUInt8(stopsize, 4);\n        this._sendDataB(data);\n    }\n\n    protected _setControl(control: number): void {\n        this._will();\n        const data = Buffer.from(\"fffa2c0500fff0\", \"hex\");\n        data.writeUInt8(control, 4);\n        this._sendDataB(data);\n    }\n\n    _sendDataB(data: Buffer): void {\n        debugApi(\"MyWorkerNet.sendData\", \"data:\", data.toString(\"hex\"), \"this._activeCmd:\", this._activeCmd);\n        this._socket.write(data);\n    }\n\n    sendData(data: string): void {\n        debugApi(\"MyWorkerNet.sendData\", \"data:\", data, \"this._activeCmd:\", this._activeCmd);\n        this._socket.write(data);\n    }\n\n    close(): Promise<boolean> {\n        debugApi(\"MyWorkerNet.close\");\n        return new Promise<boolean>((resolve) => {\n            this._socket.end(() => {\n                resolve(true);\n            });\n        });\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AAClB,UAAqB;AACrB,4BAA2B;AAE3B,MAAM,eAAW,aAAAA,SAAM,eAAe;AAEtC,iBAAS,MAAM,kBAAkB,sBAAAC,QAAe;AAAA,EAG5C,YAAY,MAAc,MAAc,UAAkB,WAAoC;AAC1F,aAAS,2BAA2B,SAAS,MAAM,SAAS,IAAI;AAChE,UAAM;AAJV,SAAU,UAAsB,IAAI,IAAI,OAAO;AAK3C,QAAI;AAAW,WAAK,QAAQ,GAAG,QAAQ,SAAS;AAChD,SAAK,QAAQ,KAAK,KAAK,eAAe;AACtC,SAAK,QAAQ,QAAQ,MAAM,MAAM,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,EAC/D;AAAA,EAEU,QAAc;AACpB,UAAM,OAAO,OAAO,KAAK,UAAU,KAAK;AACxC,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEU,aAAa,UAAwB;AAC3C,SAAK,MAAM;AACX,UAAM,OAAO,OAAO,KAAK,wBAAwB,KAAK;AACtD,SAAK,cAAc,UAAU,CAAC;AAC9B,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEU,aAAa,UAAwB;AAC3C,SAAK,MAAM;AACX,UAAM,OAAO,OAAO,KAAK,kBAAkB,KAAK;AAChD,SAAK,WAAW,UAAU,CAAC;AAC3B,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEU,WAAW,QAAsB;AACvC,SAAK,MAAM;AACX,UAAM,OAAO,OAAO,KAAK,kBAAkB,KAAK;AAChD,SAAK,WAAW,QAAQ,CAAC;AACzB,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEU,aAAa,UAAwB;AAC3C,SAAK,MAAM;AACX,UAAM,OAAO,OAAO,KAAK,kBAAkB,KAAK;AAChD,SAAK,WAAW,UAAU,CAAC;AAC3B,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEU,YAAY,SAAuB;AACzC,SAAK,MAAM;AACX,UAAM,OAAO,OAAO,KAAK,kBAAkB,KAAK;AAChD,SAAK,WAAW,SAAS,CAAC;AAC1B,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEA,WAAW,MAAoB;AAC3B,aAAS,wBAAwB,SAAS,KAAK,SAAS,KAAK,GAAG,oBAAoB,KAAK,UAAU;AACnG,SAAK,QAAQ,MAAM,IAAI;AAAA,EAC3B;AAAA,EAEA,SAAS,MAAoB;AACzB,aAAS,wBAAwB,SAAS,MAAM,oBAAoB,KAAK,UAAU;AACnF,SAAK,QAAQ,MAAM,IAAI;AAAA,EAC3B;AAAA,EAEA,QAA0B;AACtB,aAAS,mBAAmB;AAC5B,WAAO,IAAI,QAAiB,CAAC,YAAY;AACrC,WAAK,QAAQ,IAAI,MAAM;AACnB,gBAAQ,IAAI;AAAA,MAChB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;",
  "names": ["Debug", "WorkerAbstract"]
}
