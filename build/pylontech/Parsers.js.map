{
  "version": 3,
  "sources": ["../../src/pylontech/Parsers.ts"],
  "sourcesContent": ["// Copyright (c) 2020-2023 Tr\u00E4ger\n\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n// DEALINGS IN THE SOFTWARE.\n\nimport { debug } from 'debug';\nimport { IParser } from './IParser';\nimport { ParserForceBat } from './ParserForceBat';\nimport { ParserForceBmuinfoN } from './ParserForceBmuinfoN';\nimport { ParserForceInfo } from './ParserForceInfo';\nimport { ParserForcePwr } from './ParserForcePwr';\nimport { ParserForceSoh } from './ParserForceSoh';\nimport { ParserForceStat } from './ParserForceStat';\nimport { ParserForceSysinfo } from './ParserForceSysinfo';\nimport { ParserForceUnit } from './ParserForceUnit';\nimport { ParserLog } from './ParserLog';\nimport { ParserTime } from './ParserTime';\nimport { ParserUSBatN } from './ParserUSBatN';\nimport { ParserUSInfoN } from './ParserUSInfoN';\nimport { ParserUSPwr } from './ParserUSPwr';\nimport { ParserUSPwrN } from './ParserUSPwrN';\nimport { ParserUSSohN } from './ParserUSSohN';\nimport { ParserUSStatN } from './ParserUSStatN';\n\nconst debugParsers = debug('pylontech:parsers');\n\nexport class Parsers {\n  protected _parser: IParser[] = [];\n  protected _cmd: string = '';\n\n  constructor(model: string) {\n    debugParsers('Parsers.constructor');\n    if (model == 'FORCE') {\n      this._parser.push(new ParserForceInfo());\n      this._parser.push(new ParserForceStat());\n      this._parser.push(new ParserForcePwr());\n      this._parser.push(new ParserForceUnit());\n      this._parser.push(new ParserForceBmuinfoN());\n      this._parser.push(new ParserForceBat());\n      this._parser.push(new ParserForceSysinfo());\n      this._parser.push(new ParserForceSoh());\n    } else {\n      this._parser.push(new ParserUSInfoN());\n      this._parser.push(new ParserUSPwrN());\n      this._parser.push(new ParserUSBatN());\n      this._parser.push(new ParserUSSohN());\n      this._parser.push(new ParserUSStatN());\n      this._parser.push(new ParserUSPwr());\n    }\n    this._parser.push(new ParserLog());\n    this._parser.push(new ParserTime());\n  }\n\n  setCMD(cmd: string): void {\n    this._cmd = cmd;\n  }\n\n  getParser(): IParser | undefined {\n    debugParsers('Parsers.getParser', 'this._cmd ', this._cmd);\n    let result: IParser | undefined;\n    this._parser.forEach(parser => {\n      if (parser.isParser(this._cmd)) {\n        debugParsers('Parsers.getParser', 'parser', parser.getParserName());\n        if (result == undefined) {\n          result = parser;\n        }\n      }\n    });\n    return result;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,mBAAsB;AAEtB,4BAA+B;AAC/B,iCAAoC;AACpC,6BAAgC;AAChC,4BAA+B;AAC/B,4BAA+B;AAC/B,6BAAgC;AAChC,gCAAmC;AACnC,6BAAgC;AAChC,uBAA0B;AAC1B,wBAA2B;AAC3B,0BAA6B;AAC7B,2BAA8B;AAC9B,yBAA4B;AAC5B,0BAA6B;AAC7B,0BAA6B;AAC7B,2BAA8B;AAE9B,MAAM,mBAAe,oBAAM,mBAAmB;AAEvC,MAAM,QAAQ;AAAA,EAInB,YAAY,OAAe;AAH3B,SAAU,UAAqB,CAAC;AAChC,SAAU,OAAe;AAGvB,iBAAa,qBAAqB;AAClC,QAAI,SAAS,SAAS;AACpB,WAAK,QAAQ,KAAK,IAAI,uCAAgB,CAAC;AACvC,WAAK,QAAQ,KAAK,IAAI,uCAAgB,CAAC;AACvC,WAAK,QAAQ,KAAK,IAAI,qCAAe,CAAC;AACtC,WAAK,QAAQ,KAAK,IAAI,uCAAgB,CAAC;AACvC,WAAK,QAAQ,KAAK,IAAI,+CAAoB,CAAC;AAC3C,WAAK,QAAQ,KAAK,IAAI,qCAAe,CAAC;AACtC,WAAK,QAAQ,KAAK,IAAI,6CAAmB,CAAC;AAC1C,WAAK,QAAQ,KAAK,IAAI,qCAAe,CAAC;AAAA,IACxC,OAAO;AACL,WAAK,QAAQ,KAAK,IAAI,mCAAc,CAAC;AACrC,WAAK,QAAQ,KAAK,IAAI,iCAAa,CAAC;AACpC,WAAK,QAAQ,KAAK,IAAI,iCAAa,CAAC;AACpC,WAAK,QAAQ,KAAK,IAAI,iCAAa,CAAC;AACpC,WAAK,QAAQ,KAAK,IAAI,mCAAc,CAAC;AACrC,WAAK,QAAQ,KAAK,IAAI,+BAAY,CAAC;AAAA,IACrC;AACA,SAAK,QAAQ,KAAK,IAAI,2BAAU,CAAC;AACjC,SAAK,QAAQ,KAAK,IAAI,6BAAW,CAAC;AAAA,EACpC;AAAA,EAEA,OAAO,KAAmB;AACxB,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,YAAiC;AAC/B,iBAAa,qBAAqB,cAAc,KAAK,IAAI;AACzD,QAAI;AACJ,SAAK,QAAQ,QAAQ,YAAU;AAC7B,UAAI,OAAO,SAAS,KAAK,IAAI,GAAG;AAC9B,qBAAa,qBAAqB,UAAU,OAAO,cAAc,CAAC;AAClE,YAAI,UAAU,QAAW;AACvB,mBAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AACF;",
  "names": []
}
