{
  "version": 3,
  "sources": ["../../src/pylontech/ParserPwrN.ts"],
  "sourcesContent": ["import ParserBase from \"./ParserBase\";\n\n//const debugApi = Debug(\"pylontech:api\");\n\nconst COMMAND: string = \"pwr\";\n\nexport class ParserPwrN extends ParserBase {\n    _number: number | undefined;\n\n    isParser(data: string): boolean {\n        const prompt: RegExp = /(>)(\\S+)\\s(\\d+)$/gm;\n        return this._isParser(data, prompt, COMMAND);\n    }\n\n    parseData(data: string): any {\n        const row: RegExp = /(.+\\S)\\s+:\\s(.*)/gm;\n        return this._parseDataNameValN(data, row, COMMAND);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuB;AAIvB,MAAM,UAAkB;AAEjB,MAAM,mBAAmB,kBAAAA,QAAW;AAAA,EAGvC,SAAS,MAAuB;AAC5B,UAAM,SAAiB;AACvB,WAAO,KAAK,UAAU,MAAM,QAAQ,OAAO;AAAA,EAC/C;AAAA,EAEA,UAAU,MAAmB;AACzB,UAAM,MAAc;AACpB,WAAO,KAAK,mBAAmB,MAAM,KAAK,OAAO;AAAA,EACrD;AACJ;",
  "names": ["ParserBase"]
}
